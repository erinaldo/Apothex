//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.18408
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// 
// This source code was auto-generated by Microsoft.VSDesigner, Version 4.0.30319.18408.
// 
#pragma warning disable 1591

namespace Apothex.WSDataAccess.Synchronization {
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Web.Services.WebServiceBindingAttribute(Name="WSSynchronizationSoap", Namespace="http://tempuri.org/")]
    public partial class WSSynchronization : System.Web.Services.Protocols.SoapHttpClientProtocol {
        
        private System.Threading.SendOrPostCallback GetSyncBranchOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetSyncUserOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetSyncUserPermissionOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetSyncMyCompanyOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetSyncCurrencyOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetSyncPaymentMethodOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetSyncProductLocationOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetSyncCardUnitRateOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetSyncCardDiscountSchemaOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetOperationTypeOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetInvalidSalesOrderDetailOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetDateOperationCompleted;
        
        private System.Threading.SendOrPostCallback SynchronizeOperationCompleted;
        
        private bool useDefaultCredentialsSetExplicitly;
        
        /// <remarks/>
        public WSSynchronization() {
            this.Url = global::Apothex.WSDataAccess.Properties.Settings.Default.Apothex_WSDataAccess_Synchronization_WSSynchronization;
            if ((this.IsLocalFileSystemWebService(this.Url) == true)) {
                this.UseDefaultCredentials = true;
                this.useDefaultCredentialsSetExplicitly = false;
            }
            else {
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        public new string Url {
            get {
                return base.Url;
            }
            set {
                if ((((this.IsLocalFileSystemWebService(base.Url) == true) 
                            && (this.useDefaultCredentialsSetExplicitly == false)) 
                            && (this.IsLocalFileSystemWebService(value) == false))) {
                    base.UseDefaultCredentials = false;
                }
                base.Url = value;
            }
        }
        
        public new bool UseDefaultCredentials {
            get {
                return base.UseDefaultCredentials;
            }
            set {
                base.UseDefaultCredentials = value;
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        /// <remarks/>
        public event GetSyncBranchCompletedEventHandler GetSyncBranchCompleted;
        
        /// <remarks/>
        public event GetSyncUserCompletedEventHandler GetSyncUserCompleted;
        
        /// <remarks/>
        public event GetSyncUserPermissionCompletedEventHandler GetSyncUserPermissionCompleted;
        
        /// <remarks/>
        public event GetSyncMyCompanyCompletedEventHandler GetSyncMyCompanyCompleted;
        
        /// <remarks/>
        public event GetSyncCurrencyCompletedEventHandler GetSyncCurrencyCompleted;
        
        /// <remarks/>
        public event GetSyncPaymentMethodCompletedEventHandler GetSyncPaymentMethodCompleted;
        
        /// <remarks/>
        public event GetSyncProductLocationCompletedEventHandler GetSyncProductLocationCompleted;
        
        /// <remarks/>
        public event GetSyncCardUnitRateCompletedEventHandler GetSyncCardUnitRateCompleted;
        
        /// <remarks/>
        public event GetSyncCardDiscountSchemaCompletedEventHandler GetSyncCardDiscountSchemaCompleted;
        
        /// <remarks/>
        public event GetOperationTypeCompletedEventHandler GetOperationTypeCompleted;
        
        /// <remarks/>
        public event GetInvalidSalesOrderDetailCompletedEventHandler GetInvalidSalesOrderDetailCompleted;
        
        /// <remarks/>
        public event GetDateCompletedEventHandler GetDateCompleted;
        
        /// <remarks/>
        public event SynchronizeCompletedEventHandler SynchronizeCompleted;
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetSyncBranch", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute(DataType="base64Binary")]
        public byte[] GetSyncBranch(int branchID, System.DateTime modifiedDate, int action) {
            object[] results = this.Invoke("GetSyncBranch", new object[] {
                        branchID,
                        modifiedDate,
                        action});
            return ((byte[])(results[0]));
        }
        
        /// <remarks/>
        public void GetSyncBranchAsync(int branchID, System.DateTime modifiedDate, int action) {
            this.GetSyncBranchAsync(branchID, modifiedDate, action, null);
        }
        
        /// <remarks/>
        public void GetSyncBranchAsync(int branchID, System.DateTime modifiedDate, int action, object userState) {
            if ((this.GetSyncBranchOperationCompleted == null)) {
                this.GetSyncBranchOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetSyncBranchOperationCompleted);
            }
            this.InvokeAsync("GetSyncBranch", new object[] {
                        branchID,
                        modifiedDate,
                        action}, this.GetSyncBranchOperationCompleted, userState);
        }
        
        private void OnGetSyncBranchOperationCompleted(object arg) {
            if ((this.GetSyncBranchCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetSyncBranchCompleted(this, new GetSyncBranchCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetSyncUser", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute(DataType="base64Binary")]
        public byte[] GetSyncUser(int userID, int branchID, System.DateTime modifiedDate, int action) {
            object[] results = this.Invoke("GetSyncUser", new object[] {
                        userID,
                        branchID,
                        modifiedDate,
                        action});
            return ((byte[])(results[0]));
        }
        
        /// <remarks/>
        public void GetSyncUserAsync(int userID, int branchID, System.DateTime modifiedDate, int action) {
            this.GetSyncUserAsync(userID, branchID, modifiedDate, action, null);
        }
        
        /// <remarks/>
        public void GetSyncUserAsync(int userID, int branchID, System.DateTime modifiedDate, int action, object userState) {
            if ((this.GetSyncUserOperationCompleted == null)) {
                this.GetSyncUserOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetSyncUserOperationCompleted);
            }
            this.InvokeAsync("GetSyncUser", new object[] {
                        userID,
                        branchID,
                        modifiedDate,
                        action}, this.GetSyncUserOperationCompleted, userState);
        }
        
        private void OnGetSyncUserOperationCompleted(object arg) {
            if ((this.GetSyncUserCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetSyncUserCompleted(this, new GetSyncUserCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetSyncUserPermission", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute(DataType="base64Binary")]
        public byte[] GetSyncUserPermission(int userID, int branchID, System.DateTime modifiedDate, int action) {
            object[] results = this.Invoke("GetSyncUserPermission", new object[] {
                        userID,
                        branchID,
                        modifiedDate,
                        action});
            return ((byte[])(results[0]));
        }
        
        /// <remarks/>
        public void GetSyncUserPermissionAsync(int userID, int branchID, System.DateTime modifiedDate, int action) {
            this.GetSyncUserPermissionAsync(userID, branchID, modifiedDate, action, null);
        }
        
        /// <remarks/>
        public void GetSyncUserPermissionAsync(int userID, int branchID, System.DateTime modifiedDate, int action, object userState) {
            if ((this.GetSyncUserPermissionOperationCompleted == null)) {
                this.GetSyncUserPermissionOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetSyncUserPermissionOperationCompleted);
            }
            this.InvokeAsync("GetSyncUserPermission", new object[] {
                        userID,
                        branchID,
                        modifiedDate,
                        action}, this.GetSyncUserPermissionOperationCompleted, userState);
        }
        
        private void OnGetSyncUserPermissionOperationCompleted(object arg) {
            if ((this.GetSyncUserPermissionCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetSyncUserPermissionCompleted(this, new GetSyncUserPermissionCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetSyncMyCompany", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute(DataType="base64Binary")]
        public byte[] GetSyncMyCompany(int myCompanyID, System.DateTime modifiedDate, int action) {
            object[] results = this.Invoke("GetSyncMyCompany", new object[] {
                        myCompanyID,
                        modifiedDate,
                        action});
            return ((byte[])(results[0]));
        }
        
        /// <remarks/>
        public void GetSyncMyCompanyAsync(int myCompanyID, System.DateTime modifiedDate, int action) {
            this.GetSyncMyCompanyAsync(myCompanyID, modifiedDate, action, null);
        }
        
        /// <remarks/>
        public void GetSyncMyCompanyAsync(int myCompanyID, System.DateTime modifiedDate, int action, object userState) {
            if ((this.GetSyncMyCompanyOperationCompleted == null)) {
                this.GetSyncMyCompanyOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetSyncMyCompanyOperationCompleted);
            }
            this.InvokeAsync("GetSyncMyCompany", new object[] {
                        myCompanyID,
                        modifiedDate,
                        action}, this.GetSyncMyCompanyOperationCompleted, userState);
        }
        
        private void OnGetSyncMyCompanyOperationCompleted(object arg) {
            if ((this.GetSyncMyCompanyCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetSyncMyCompanyCompleted(this, new GetSyncMyCompanyCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetSyncCurrency", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute(DataType="base64Binary")]
        public byte[] GetSyncCurrency(string currencyCode, System.DateTime modifiedDate, int action) {
            object[] results = this.Invoke("GetSyncCurrency", new object[] {
                        currencyCode,
                        modifiedDate,
                        action});
            return ((byte[])(results[0]));
        }
        
        /// <remarks/>
        public void GetSyncCurrencyAsync(string currencyCode, System.DateTime modifiedDate, int action) {
            this.GetSyncCurrencyAsync(currencyCode, modifiedDate, action, null);
        }
        
        /// <remarks/>
        public void GetSyncCurrencyAsync(string currencyCode, System.DateTime modifiedDate, int action, object userState) {
            if ((this.GetSyncCurrencyOperationCompleted == null)) {
                this.GetSyncCurrencyOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetSyncCurrencyOperationCompleted);
            }
            this.InvokeAsync("GetSyncCurrency", new object[] {
                        currencyCode,
                        modifiedDate,
                        action}, this.GetSyncCurrencyOperationCompleted, userState);
        }
        
        private void OnGetSyncCurrencyOperationCompleted(object arg) {
            if ((this.GetSyncCurrencyCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetSyncCurrencyCompleted(this, new GetSyncCurrencyCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetSyncPaymentMethod", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute(DataType="base64Binary")]
        public byte[] GetSyncPaymentMethod(int paymentMethodID, System.DateTime modifiedDate, int action) {
            object[] results = this.Invoke("GetSyncPaymentMethod", new object[] {
                        paymentMethodID,
                        modifiedDate,
                        action});
            return ((byte[])(results[0]));
        }
        
        /// <remarks/>
        public void GetSyncPaymentMethodAsync(int paymentMethodID, System.DateTime modifiedDate, int action) {
            this.GetSyncPaymentMethodAsync(paymentMethodID, modifiedDate, action, null);
        }
        
        /// <remarks/>
        public void GetSyncPaymentMethodAsync(int paymentMethodID, System.DateTime modifiedDate, int action, object userState) {
            if ((this.GetSyncPaymentMethodOperationCompleted == null)) {
                this.GetSyncPaymentMethodOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetSyncPaymentMethodOperationCompleted);
            }
            this.InvokeAsync("GetSyncPaymentMethod", new object[] {
                        paymentMethodID,
                        modifiedDate,
                        action}, this.GetSyncPaymentMethodOperationCompleted, userState);
        }
        
        private void OnGetSyncPaymentMethodOperationCompleted(object arg) {
            if ((this.GetSyncPaymentMethodCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetSyncPaymentMethodCompleted(this, new GetSyncPaymentMethodCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetSyncProductLocation", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute(DataType="base64Binary")]
        public byte[] GetSyncProductLocation(int productLocationID, int productID, int branchID, System.DateTime modifiedDate, int action) {
            object[] results = this.Invoke("GetSyncProductLocation", new object[] {
                        productLocationID,
                        productID,
                        branchID,
                        modifiedDate,
                        action});
            return ((byte[])(results[0]));
        }
        
        /// <remarks/>
        public void GetSyncProductLocationAsync(int productLocationID, int productID, int branchID, System.DateTime modifiedDate, int action) {
            this.GetSyncProductLocationAsync(productLocationID, productID, branchID, modifiedDate, action, null);
        }
        
        /// <remarks/>
        public void GetSyncProductLocationAsync(int productLocationID, int productID, int branchID, System.DateTime modifiedDate, int action, object userState) {
            if ((this.GetSyncProductLocationOperationCompleted == null)) {
                this.GetSyncProductLocationOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetSyncProductLocationOperationCompleted);
            }
            this.InvokeAsync("GetSyncProductLocation", new object[] {
                        productLocationID,
                        productID,
                        branchID,
                        modifiedDate,
                        action}, this.GetSyncProductLocationOperationCompleted, userState);
        }
        
        private void OnGetSyncProductLocationOperationCompleted(object arg) {
            if ((this.GetSyncProductLocationCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetSyncProductLocationCompleted(this, new GetSyncProductLocationCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetSyncCardUnitRate", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute(DataType="base64Binary")]
        public byte[] GetSyncCardUnitRate() {
            object[] results = this.Invoke("GetSyncCardUnitRate", new object[0]);
            return ((byte[])(results[0]));
        }
        
        /// <remarks/>
        public void GetSyncCardUnitRateAsync() {
            this.GetSyncCardUnitRateAsync(null);
        }
        
        /// <remarks/>
        public void GetSyncCardUnitRateAsync(object userState) {
            if ((this.GetSyncCardUnitRateOperationCompleted == null)) {
                this.GetSyncCardUnitRateOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetSyncCardUnitRateOperationCompleted);
            }
            this.InvokeAsync("GetSyncCardUnitRate", new object[0], this.GetSyncCardUnitRateOperationCompleted, userState);
        }
        
        private void OnGetSyncCardUnitRateOperationCompleted(object arg) {
            if ((this.GetSyncCardUnitRateCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetSyncCardUnitRateCompleted(this, new GetSyncCardUnitRateCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetSyncCardDiscountSchema", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute(DataType="base64Binary")]
        public byte[] GetSyncCardDiscountSchema() {
            object[] results = this.Invoke("GetSyncCardDiscountSchema", new object[0]);
            return ((byte[])(results[0]));
        }
        
        /// <remarks/>
        public void GetSyncCardDiscountSchemaAsync() {
            this.GetSyncCardDiscountSchemaAsync(null);
        }
        
        /// <remarks/>
        public void GetSyncCardDiscountSchemaAsync(object userState) {
            if ((this.GetSyncCardDiscountSchemaOperationCompleted == null)) {
                this.GetSyncCardDiscountSchemaOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetSyncCardDiscountSchemaOperationCompleted);
            }
            this.InvokeAsync("GetSyncCardDiscountSchema", new object[0], this.GetSyncCardDiscountSchemaOperationCompleted, userState);
        }
        
        private void OnGetSyncCardDiscountSchemaOperationCompleted(object arg) {
            if ((this.GetSyncCardDiscountSchemaCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetSyncCardDiscountSchemaCompleted(this, new GetSyncCardDiscountSchemaCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetOperationType", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute(DataType="base64Binary")]
        public byte[] GetOperationType() {
            object[] results = this.Invoke("GetOperationType", new object[0]);
            return ((byte[])(results[0]));
        }
        
        /// <remarks/>
        public void GetOperationTypeAsync() {
            this.GetOperationTypeAsync(null);
        }
        
        /// <remarks/>
        public void GetOperationTypeAsync(object userState) {
            if ((this.GetOperationTypeOperationCompleted == null)) {
                this.GetOperationTypeOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetOperationTypeOperationCompleted);
            }
            this.InvokeAsync("GetOperationType", new object[0], this.GetOperationTypeOperationCompleted, userState);
        }
        
        private void OnGetOperationTypeOperationCompleted(object arg) {
            if ((this.GetOperationTypeCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetOperationTypeCompleted(this, new GetOperationTypeCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetInvalidSalesOrderDetail", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute(DataType="base64Binary")]
        public byte[] GetInvalidSalesOrderDetail([System.Xml.Serialization.XmlElementAttribute(DataType="base64Binary")] byte[] b) {
            object[] results = this.Invoke("GetInvalidSalesOrderDetail", new object[] {
                        b});
            return ((byte[])(results[0]));
        }
        
        /// <remarks/>
        public void GetInvalidSalesOrderDetailAsync(byte[] b) {
            this.GetInvalidSalesOrderDetailAsync(b, null);
        }
        
        /// <remarks/>
        public void GetInvalidSalesOrderDetailAsync(byte[] b, object userState) {
            if ((this.GetInvalidSalesOrderDetailOperationCompleted == null)) {
                this.GetInvalidSalesOrderDetailOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetInvalidSalesOrderDetailOperationCompleted);
            }
            this.InvokeAsync("GetInvalidSalesOrderDetail", new object[] {
                        b}, this.GetInvalidSalesOrderDetailOperationCompleted, userState);
        }
        
        private void OnGetInvalidSalesOrderDetailOperationCompleted(object arg) {
            if ((this.GetInvalidSalesOrderDetailCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetInvalidSalesOrderDetailCompleted(this, new GetInvalidSalesOrderDetailCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetDate", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.DateTime GetDate(int objectID, bool isOnline) {
            object[] results = this.Invoke("GetDate", new object[] {
                        objectID,
                        isOnline});
            return ((System.DateTime)(results[0]));
        }
        
        /// <remarks/>
        public void GetDateAsync(int objectID, bool isOnline) {
            this.GetDateAsync(objectID, isOnline, null);
        }
        
        /// <remarks/>
        public void GetDateAsync(int objectID, bool isOnline, object userState) {
            if ((this.GetDateOperationCompleted == null)) {
                this.GetDateOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetDateOperationCompleted);
            }
            this.InvokeAsync("GetDate", new object[] {
                        objectID,
                        isOnline}, this.GetDateOperationCompleted, userState);
        }
        
        private void OnGetDateOperationCompleted(object arg) {
            if ((this.GetDateCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetDateCompleted(this, new GetDateCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/Synchronize", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int Synchronize(int objectID, int modifiedUserID, System.DateTime modifiedDate, int action, bool isOnline, [System.Xml.Serialization.XmlElementAttribute(DataType="base64Binary")] byte[] b) {
            object[] results = this.Invoke("Synchronize", new object[] {
                        objectID,
                        modifiedUserID,
                        modifiedDate,
                        action,
                        isOnline,
                        b});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void SynchronizeAsync(int objectID, int modifiedUserID, System.DateTime modifiedDate, int action, bool isOnline, byte[] b) {
            this.SynchronizeAsync(objectID, modifiedUserID, modifiedDate, action, isOnline, b, null);
        }
        
        /// <remarks/>
        public void SynchronizeAsync(int objectID, int modifiedUserID, System.DateTime modifiedDate, int action, bool isOnline, byte[] b, object userState) {
            if ((this.SynchronizeOperationCompleted == null)) {
                this.SynchronizeOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSynchronizeOperationCompleted);
            }
            this.InvokeAsync("Synchronize", new object[] {
                        objectID,
                        modifiedUserID,
                        modifiedDate,
                        action,
                        isOnline,
                        b}, this.SynchronizeOperationCompleted, userState);
        }
        
        private void OnSynchronizeOperationCompleted(object arg) {
            if ((this.SynchronizeCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SynchronizeCompleted(this, new SynchronizeCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        public new void CancelAsync(object userState) {
            base.CancelAsync(userState);
        }
        
        private bool IsLocalFileSystemWebService(string url) {
            if (((url == null) 
                        || (url == string.Empty))) {
                return false;
            }
            System.Uri wsUri = new System.Uri(url);
            if (((wsUri.Port >= 1024) 
                        && (string.Compare(wsUri.Host, "localHost", System.StringComparison.OrdinalIgnoreCase) == 0))) {
                return true;
            }
            return false;
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void GetSyncBranchCompletedEventHandler(object sender, GetSyncBranchCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetSyncBranchCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetSyncBranchCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public byte[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((byte[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void GetSyncUserCompletedEventHandler(object sender, GetSyncUserCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetSyncUserCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetSyncUserCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public byte[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((byte[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void GetSyncUserPermissionCompletedEventHandler(object sender, GetSyncUserPermissionCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetSyncUserPermissionCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetSyncUserPermissionCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public byte[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((byte[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void GetSyncMyCompanyCompletedEventHandler(object sender, GetSyncMyCompanyCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetSyncMyCompanyCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetSyncMyCompanyCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public byte[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((byte[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void GetSyncCurrencyCompletedEventHandler(object sender, GetSyncCurrencyCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetSyncCurrencyCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetSyncCurrencyCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public byte[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((byte[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void GetSyncPaymentMethodCompletedEventHandler(object sender, GetSyncPaymentMethodCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetSyncPaymentMethodCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetSyncPaymentMethodCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public byte[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((byte[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void GetSyncProductLocationCompletedEventHandler(object sender, GetSyncProductLocationCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetSyncProductLocationCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetSyncProductLocationCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public byte[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((byte[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void GetSyncCardUnitRateCompletedEventHandler(object sender, GetSyncCardUnitRateCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetSyncCardUnitRateCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetSyncCardUnitRateCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public byte[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((byte[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void GetSyncCardDiscountSchemaCompletedEventHandler(object sender, GetSyncCardDiscountSchemaCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetSyncCardDiscountSchemaCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetSyncCardDiscountSchemaCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public byte[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((byte[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void GetOperationTypeCompletedEventHandler(object sender, GetOperationTypeCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetOperationTypeCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetOperationTypeCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public byte[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((byte[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void GetInvalidSalesOrderDetailCompletedEventHandler(object sender, GetInvalidSalesOrderDetailCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetInvalidSalesOrderDetailCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetInvalidSalesOrderDetailCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public byte[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((byte[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void GetDateCompletedEventHandler(object sender, GetDateCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetDateCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetDateCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.DateTime Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.DateTime)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void SynchronizeCompletedEventHandler(object sender, SynchronizeCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SynchronizeCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SynchronizeCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
}

#pragma warning restore 1591